///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// THIS CODE WILL NOT WORK ON THE PCB BOARD IT IS JUST AN EXAMPLE SO THAT YOU MAY UNDERSTAND THE CODE SYNTAX */
// This project shows how to perform Port Control. 
// It demonstrates how to set a pin as an input as well as output pin. 
// We toggle the LED on the SAMD20 whenever the button SW0 on the SAMD20 is pressed.
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Include header files for all drivers
#include <asf.h>

int count = 0;

void wait(int t)
{
	count = 0;
    while (count < t)
	{
		count++;
	}
}

int main (void)
{
	system_init();

	//sets the base address for the Port structure to PORT_INSTS or 0x41004400
	Port *ports = PORT_INSTS;
	
	//sets the group offset for the structure PortGroup in this case it is for group[0] or groupA
	// GroupA offset of 0x00				// GroupB offset of 0x80
	PortGroup *porA = &(ports->Group[0]);
	
	// Set the direction of LED0 pin to be output
	// PORT_PAxx is defined as (1u << x) so in this case PORT_PA14 = (1U << 14)
	porA->DIRSET.reg = PORT_PA14;

	// Set the direction of SW0 pin to be input
	porA->DIRCLR.reg = PORT_PA15;
	porA->OUTSET.reg = PORT_PA15;

	//Perform other configurations for SW0 - Do input enable and pull-up
	porA->PINCFG[15].reg=PORT_PINCFG_INEN | PORT_PINCFG_PULLEN;

	while (1){
		//check if button was pressed
		if(!( porA->IN.reg & PORT_PA15))
		{
			// if button was pressed toggle LED
			porA->OUTTGL.reg = PORT_PA14;
		}
		//wait
		wait(500);
	}
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
/* end of sample code for Lab 1 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////